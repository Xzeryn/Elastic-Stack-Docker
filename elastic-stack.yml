services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:${STACK_VERSION}
    restart: always
    labels:
      co.elastic.logs/module: elasticsearch
    volumes:
      - certs:/usr/share/elasticsearch/config/certs
      - ./config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro
      - ./config/es-docker-entrypoint.sh:/usr/local/bin/docker-entrypoint.sh:ro  
    environment:
      - cluster.name=${CLUSTER_NAME}
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
      - bootstrap.memory_lock=true
      - xpack.security.enabled=true
      - xpack.security.http.ssl.enabled=true
      - xpack.security.http.ssl.certificate_authorities=certs/ca/ca.crt
      - xpack.security.transport.ssl.enabled=true
      - xpack.security.transport.ssl.certificate_authorities=certs/ca/ca.crt
      - xpack.security.transport.ssl.verification_mode=certificate
      - xpack.license.self_generated.type=${LICENSE}
      - xpack.ml.use_auto_machine_memory_percent=true
      - ELASTIC_APM_SECRET_TOKEN=${ELASTIC_APM_SECRET_TOKEN}
      - ELASTIC_APM_ENVIRONMENT=${STACK_APM_ENVIRONMENT}
      - DOCKER_HOST_IP=${DOCKER_HOST_IP}
      - APMSERVER_PORT=${APMSERVER_PORT}
      - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY}
      - MINIO_SECRET_KEY=${MINIO_SECRET_KEY}
    deploy:
      resources:
        limits:
          cpus: ${ES_CPU_LIMIT}
          memory: ${ES_MEM_LIMIT}
        reservations:
          cpus: ${ES_CPU_LIMIT}
          memory: ${ES_MEM_LIMIT}
    ulimits:
      memlock:
        soft: -1
        hard: -1
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -s --cacert config/certs/ca/ca.crt https://localhost:9200 | grep -q 'missing authentication credentials'",
        ]
      interval: 10s
      timeout: 10s
      retries: 120
  
  kibana:
    image: docker.elastic.co/kibana/kibana:${STACK_VERSION}
    restart: always
    labels:
      co.elastic.logs/module: kibana
    volumes:
      - certs:/usr/share/kibana/config/certs
      - kibanadata:/usr/share/kibana/data
      - ./config/kibana.yml:/usr/share/kibana/config/kibana.yml:rw
      - ./config/kibana-output-config-entrypoint.sh:/usr/local/bin/kibana-startup.sh:ro
    entrypoint: ["kibana-startup.sh"]
    environment:
      - SERVERNAME=kibana
      - ES_CACERT=unset
      - ES_CAFINGERPRINT=unset
      - ELASTICSEARCH_HOSTS=https://es01:9200
      - ELASTICSEARCH_USERNAME=kibana_system
      - ELASTICSEARCH_PASSWORD=${KIBANA_PASSWORD}
      - ELASTICSEARCH_SSL_CERTIFICATEAUTHORITIES=config/certs/ca/ca.crt
      - XPACK_SECURITY_ENCRYPTIONKEY=${ENCRYPTION_KEY}
      - XPACK_ENCRYPTEDSAVEDOBJECTS_ENCRYPTIONKEY=${ENCRYPTION_KEY}
      - XPACK_REPORTING_ENCRYPTIONKEY=${ENCRYPTION_KEY}
      - XPACK_REPORTING_KIBANASERVER_HOSTNAME=localhost
      - SERVER_SSL_ENABLED=true
      - SERVER_SSL_CERTIFICATE=config/certs/kibana/kibana.crt
      - SERVER_SSL_KEY=config/certs/kibana/kibana.key
      - SERVER_SSL_CERTIFICATEAUTHORITIES=config/certs/ca/ca.crt
      - ELASTIC_APM_SECRET_TOKEN=${ELASTIC_APM_SECRET_TOKEN}
      - ELASTIC_APM_ENVIRONMENT=${STACK_APM_ENVIRONMENT}
      - FLEET_PORT=${FLEET_PORT}
      - ES_PORT=${ES_PORT}
      - DOCKER_HOST_IP=${DOCKER_HOST_IP}
      - APMSERVER_PORT=${APMSERVER_PORT}
      - INTEGRATION_FILESTREAM_VERSION=${INTEGRATION_FILESTREAM_VERSION}
    deploy:
      resources:
        limits:
          cpus: ${KB_CPU_LIMIT}
          memory: ${KB_MEM_LIMIT}
        reservations:
          cpus: ${KB_CPU_LIMIT}
          memory: ${KB_MEM_LIMIT}
    healthcheck:
      test:
        [
          "CMD-SHELL",
          #"curl -f --cacert config/certs/ca/ca.crt https://localhost:5601/api/status",
          "curl -I -s --cacert config/certs/ca/ca.crt https://localhost:5601/api/status | head -n 1 | grep 200",
        ]
      interval: 10s
      timeout: 10s
      retries: 120

  elastic-agent:
    # image: docker.elastic.co/beats/elastic-agent:${STACK_VERSION}
    image: docker.elastic.co/elastic-agent/elastic-agent:${STACK_VERSION}
    restart: always
    volumes:
      - certs:/certs
      - "/var/lib/docker/containers:/var/lib/docker/containers:ro"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    user: root
    environment:
      - SSL_CERTIFICATE_AUTHORITIES=/certs/ca/ca.crt
      - CERTIFICATE_AUTHORITIES=/certs/ca/ca.crt
      - FLEET_CA=/certs/ca/ca.crt
      - FLEET_ENROLL=1
      - FLEET_URL=https://fleet-server:8220
      - KIBANA_FLEET_CA=/certs/ca/ca.crt
      - KIBANA_FLEET_USERNAME=elastic
      - KIBANA_FLEET_PASSWORD=${ELASTIC_PASSWORD}
      - KIBANA_HOST=https://kibana:5601
      - DOCKER_HOST_IP=${DOCKER_HOST_IP}
    healthcheck:
      test:
        [ 
          "CMD-SHELL", 
          "curl -s --cacert /certs/ca/ca.crt https://fleet-server:8220/api/status | grep HEALTHY 2>&1 >/dev/null",
        ]
      interval: 10s
      timeout: 10s
      retries: 120


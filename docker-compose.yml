include:
  - examples.yml

volumes:
  certs:
    driver: local
  keystore:
    driver: local
  esdata01:
    driver: local
  esdata02:
    driver: local
  esdata03:
    driver: local
  kibanadata:
    driver: local
  fleetserverdata:
    driver: local

networks:
  default:
    name: elastic
    external: false

services:
  setup:
    extends:
      file: stack-setup.yml
      service: setup

  es01:
    extends:
      file: elastic-stack.yml
      service: elasticsearch
    depends_on:
      setup:
        condition: service_healthy
    ports:
      - ${ES_PORT}:9200
    volumes:
      - esdata01:/usr/share/elasticsearch/data
    environment:
      - node.name=es01
      - discovery.seed_hosts=es02,es03
      - xpack.security.http.ssl.key=certs/es01/es01.key
      - xpack.security.http.ssl.certificate=certs/es01/es01.crt
      - xpack.security.transport.ssl.key=certs/es01/es01.key
      - xpack.security.transport.ssl.certificate=certs/es01/es01.crt

  es02:
    extends:
      file: elastic-stack.yml
      service: elasticsearch
    depends_on:
      es01:
        condition: service_healthy
    volumes:
      - esdata02:/usr/share/elasticsearch/data
    environment:
      - node.name=es02
      - discovery.seed_hosts=es01,es03
      - xpack.security.http.ssl.key=certs/es02/es02.key
      - xpack.security.http.ssl.certificate=certs/es02/es02.crt
      - xpack.security.transport.ssl.key=certs/es02/es02.key
      - xpack.security.transport.ssl.certificate=certs/es02/es02.crt

  es03:
    extends:
      file: elastic-stack.yml
      service: elasticsearch
    depends_on:
      es01:
        condition: service_healthy
    volumes:
      - esdata03:/usr/share/elasticsearch/data
    environment:
      - node.name=es03
      - discovery.seed_hosts=es01,es02
      - xpack.security.http.ssl.key=certs/es03/es03.key
      - xpack.security.http.ssl.certificate=certs/es03/es03.crt
      - xpack.security.transport.ssl.key=certs/es03/es03.key
      - xpack.security.transport.ssl.certificate=certs/es03/es03.crt

  kibana:
    extends:
      file: elastic-stack.yml
      service: kibana
    depends_on:
      es01:
        condition: service_healthy
    ports:
      - ${KIBANA_PORT}:5601

  fleet-server:
    extends:
      file: elastic-stack.yml
      service: elastic-agent
    depends_on:
      kibana:
        condition: service_healthy
      es01:
        condition: service_healthy
    volumes:
      - fleetserverdata:/usr/share/elastic-agent
      - "/sys/fs/cgroup:/hostfs/sys/fs/cgroup:ro"
      - "/proc:/hostfs/proc:ro"
      - "/:/hostfs:ro"
    ports:
      - ${FLEET_PORT}:8220
      - ${APMSERVER_PORT}:8200
    environment:
      - FLEET_INSECURE=true
      - FLEET_SERVER_ELASTICSEARCH_CA=/certs/ca/ca.crt
      - FLEET_SERVER_ELASTICSEARCH_HOST=https://es01:9200
      - FLEET_SERVER_ELASTICSEARCH_INSECURE=true
      - FLEET_SERVER_ENABLE=1
      - FLEET_SERVER_CERT=/certs/fleet-server/fleet-server.crt
      - FLEET_SERVER_CERT_KEY=/certs/fleet-server/fleet-server.key
      - FLEET_SERVER_INSECURE_HTTP=true
      - FLEET_SERVER_POLICY_ID=fleet-server-policy
      - KIBANA_FLEET_SETUP=1
    mem_limit: ${FLEET_MEM_LIMIT}
    healthcheck:
      test:
        [ 
          "CMD-SHELL", 
          "curl -s --cacert /certs/ca/ca.crt https://localhost:8220/api/status | grep HEALTHY 2>&1 >/dev/null",
        ]
      interval: 10s
      timeout: 10s
      retries: 120

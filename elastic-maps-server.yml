volumes:
  mapsdata01:
    driver: local

services:
  kibana:
    environment:
      # - USE_DEFAULT_MAPS=false
      # - ELASTIC_MAPS_SERVICE_URL=http://ems-server:8080
      - MAP_INCLUDEELASTICMAPSERVICE=false
      - MAP_EMSURL=https://ems-server:8080
  
  ems-server:
    depends_on:
      es01:
        condition: service_healthy                  
    image: docker.elastic.co/elastic-maps-service/elastic-maps-server:${STACK_VERSION}-amd64
    restart: always
    user: root
    hostname: elastic-maps-server
    ports:
      - ${ELASTIC_MAPS_SERVICE_PORT}:8080
    environment:
      - ELASTICSEARCH_HOST=https://es01:9200
      - ELASTICSEARCH_USERNAME=elastic
      - ELASTICSEARCH_PASSWORD=${ELASTIC_PASSWORD}
      - ELASTICSEARCH_SSL_CERTIFICATE=/etc/ssl/certs/es01/es01.crt
      - ELASTICSEARCH_SSL_KEY=/etc/ssl/certs/es01/es01.key
      - ELASTICSEARCH_SSL_VERIFICATIONMODE=certificate
      - ELASTICSEARCH_SSL_CERTIFICATEAUTHORITIES=/etc/ssl/certs/ca/ca.crt
      - SSL_ENABLED=true
      - SSL_CERTIFICATE=/etc/ssl/certs/ems-server/ems-server.crt
      - SSL_KEY=/etc/ssl/certs/ems-server/ems-server.key
    volumes:
      - certs:/etc/ssl/certs
      - ./config/elastic-maps-server.yml:/usr/src/app/server/config/elastic-maps-server.yml
      - mapsdata01:/usr/src/app/data/
    healthcheck:
      test: ["CMD-SHELL", "curl -f -L https://localhost:8080/status"]
      interval: 10s
      timeout: 10s
      retries: 120






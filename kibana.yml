elastic:
  apm:
    active: true
    serverUrl: "http://fleet-server:8200"
    secretToken: ${ELASTIC_APM_SECRET_TOKEN}
server.host: "0.0.0.0"
telemetry.enabled: "true"

xpack.fleet.agents.fleet_server.hosts: ["https://fleet-server:${FLEET_PORT}"]

xpack.fleet.outputs:
  - id: internal-elasticsearch-output
    name: default
    type: elasticsearch
    hosts: ["https://es01:9200"]
    is_default: true
    is_default_monitoring: true
    ssl.certificate_authorities: ["/certs/ca/ca.crt"]
xpack.fleet.packages:
  - name: fleet_server
    version: latest
  - name: system
    version: latest
  - name: elastic_agent
    version: latest
  - name: apm
    version: latest
  - name: docker
    version: latest
xpack.fleet.agentPolicies:
  - name: Fleet-Server-Policy
    id: fleet-server-policy
    namespace: default
    monitoring_enabled: 
      - logs
      - metrics
    package_policies:
      - name: fleet_server-1
        package:
          name: fleet_server
      - name: system-1
        package:
          name: system
      - name: elastic_agent-1
        package:
          name: elastic_agent
      - name: docker-1
        package:
          name: docker
      - name: apm-1
        package:
          name: apm
        inputs:
        - type: apm
          enabled: true
          vars:
          - name: host
            value: 0.0.0.0:8200
          - name: secret_token
            value: ${ELASTIC_APM_SECRET_TOKEN}
  - name: Docker-Container-Policy
    id: docker-container-policy
    namespace: default
    monitoring_enabled: 
      - logs
      - metrics
    package_policies:
      - name: system-docker
        package:
          name: system

      